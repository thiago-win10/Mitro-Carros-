trigger:
- main

variables:
  dockerRegistryServiceConnection: 'MitroRegistry-Connection'  # Nome da conexão com o ACR
  imageRepository: 'mitro-vehicle-api'
  containerRegistry: 'mitroregistry123456.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  aksServiceConnection: 'Mitro-AKS-Connection'  # Nome da conexão com o AKS

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: Build
    displayName: Build and Push to ACR
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to AKS Cluster
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: Kubernetes@1
      displayName: Deploy to AKS
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: $(aksServiceConnection)
        azureResourceGroup: 'mitro-vehicles'
        kubernetesCluster: 'mitroregistry123456'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: 'manifests/deployment.yaml'
